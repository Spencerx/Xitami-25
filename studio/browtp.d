/*---------------------------------------------------------------------------*
 *  browtp.d - LIBERO dialog data definitions for browtp.c.                  *
 *  Generated by LIBERO 2.4 on 22 Jul, 2004, 16:52.                          *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
enum {
    terminate_event = -1,
    call_event = 0,
    error_event = 1,
    exception_event = 2,
    exit_event = 3,
    not_found_event = 4,
    ok_event = 5,
    return_event = 6,
    show_event = 7
};

enum {
    _LR_defaults_state = 3,
    _LR_STATE_after_init = 0,
    _LR_STATE_have_request = 1,
    _LR_STATE_after_program = 2,
    _LR_STATE_defaults = 3
};


/*- Variables used by dialog interpreter ------------------------------------*/

typedef int event_t;                    /*  Type for dialog entity           */
typedef void (fsmfunct) (void);         /*  Address of FSM function          */

static event_t
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    the_next_event,                     /*  Next event from module           */
    the_exception_event;                /*  Exception event from module      */

static dbyte
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    exception_raised;                   /*  TRUE if exception raised         */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  raise_exception                  (event_t event);
MODULE initialise_the_program           (void);
MODULE get_external_event               (void);
MODULE wtp_get_do_request               (void);
MODULE load_session_context             (void);
MODULE terminate_the_program            (void);
MODULE invoke_active_program            (void);
MODULE wtp_free_do_request              (void);
MODULE wtp_error_invalid                (void);
MODULE save_session_context             (void);
MODULE wtp_reply_done_show              (void);
MODULE wtp_reply_done_call              (void);
MODULE wtp_reply_done_return            (void);
MODULE wtp_reply_done_exit              (void);
MODULE wtp_reply_done_error             (void);
MODULE wtp_error_not_found              (void);

/*- Static areas ------------------------------------------------------------*/

static dbyte _LR_nextst [][8] =
{
    { 0,0,0,0,0,1,0,0 },
    { 0,1,0,0,0,2,0,0 },
    { 1,1,0,1,1,0,1,1 },
    { 0,0,3,0,0,0,0,0 }
};

static dbyte _LR_action [][8] =
{
    { 0,2,0,0,0,1,0,0 },
    { 0,4,0,0,0,3,0,0 },
    { 6,9,0,8,10,0,7,5 },
    { 0,0,11,0,0,0,0,0 }
};

static dbyte _LR_vector [][5+1] =
{
    {0},
    {0,1,_LR_STOP},
    {2,_LR_STOP},
    {3,_LR_STOP},
    {4,5,0,_LR_STOP},
    {6,7,4,0,1,_LR_STOP},
    {6,8,4,0,1,_LR_STOP},
    {6,9,4,0,1,_LR_STOP},
    {10,4,0,1,_LR_STOP},
    {11,4,0,1,_LR_STOP},
    {12,4,0,1,_LR_STOP},
    {4,2,_LR_STOP}
};

static fsmfunct *_LR_module [] =
{
    wtp_get_do_request,
    load_session_context,
    terminate_the_program,
    invoke_active_program,
    wtp_free_do_request,
    wtp_error_invalid,
    save_session_context,
    wtp_reply_done_show,
    wtp_reply_done_call,
    wtp_reply_done_return,
    wtp_reply_done_exit,
    wtp_reply_done_error,
    wtp_error_not_found
};

